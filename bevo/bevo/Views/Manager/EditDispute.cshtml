@model bevo.Models.DisputeViewModel

@{
    ViewBag.Title = "resolve dispute";
}

<div class="row">
    <div class="homepage-top">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <h4>Dispute</h4>
        <hr />
        <dl class="dl-horizontal">


            <dt>
                @Html.DisplayNameFor(model => model.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TransName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TransName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TransAmount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TransAmount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CorrectAmount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CorrectAmount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Message)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Message)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TransAmount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TransAmount)
            </dd>
        </dl>
    </div>
    <div class="form-container row">
        <p class="form-group">
            Adjust Amount @Html.TextBox("adjustedAmount", null, new { @class = "form-control" }) <br />
            Status @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" }) <br />
            <input type="submit" value="EditDispute" class="btn btn-default" />
        </p>
    </div>

        @Html.HiddenFor(model => model.DisputeID)
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Stock</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DisputeID)

        <div class="form-group">
            @Html.LabelFor(model => model.CustEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorrectAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrectAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-container row">
            <p class="form-group">
                Adjust Amount @Html.TextBox("adjustedAmount", null, new { @class = "form-control" }) <br />
                Leave a Comment @Html.TextBox("comment", null, new { @class = "form-control" }) <br />
                Status @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" }) <br />
                <input type="submit" value="EditDispute" class="btn btn-default" />
            </p>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
